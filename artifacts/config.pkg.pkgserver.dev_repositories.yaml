---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: repositories.config.pkg.pkgserver.dev
spec:
  group: config.pkg.pkgserver.dev
  names:
    categories:
    - pkg
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .spec.deployment
      name: DEPLOYMENT
      type: boolean
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .spec['git','oci']['url','registry']
      name: ADDRESS
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Repository is the Repository for the Repository API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositorySpec defines the desired state of Repository
            properties:
              deployment:
                description: |-
                  The repository is a deployment repository;
                  When set to true this is considered a WET package; when false this is a DRY package
                type: boolean
              git:
                description: Git repository details. Required if `type` is `git`.
                  Ignored if `type` is not `git`.
                properties:
                  credentials:
                    description: Credentials defines the name of the secret that holds
                      the credentials to connect to a repository
                    type: string
                  directory:
                    description: Directory within the Git repository where the packages
                      are stored. If unspecified, defaults to root directory.
                    type: string
                  ref:
                    description: Name of the reference (typically a branch) containing
                      the packages. Finalized packages will be committed to this branch
                      (if the repository allows write access). If unspecified, defaults
                      to "main".
                    type: string
                  url:
                    description: |-
                      URL specifies the base URL for a given repository for example:
                        `https://github.com/GoogleCloudPlatform/catalog.git`
                    type: string
                type: object
              oci:
                description: OCI repository details. Required if `type` is `oci`.
                  Ignored if `type` is not `oci`.
                properties:
                  credentials:
                    description: Credentials defines the name of the secret that holds
                      the credentials to connect to the OCI registry
                    type: string
                  registry:
                    description: Registry is the address of the OCI registry
                    type: string
                type: object
              type:
                default: git
                description: Type of the repository (i.e. git, OCI)
                enum:
                - git
                - oci
                type: string
            type: object
          status:
            description: RepositoryStatus defines the observed state of Repository
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
