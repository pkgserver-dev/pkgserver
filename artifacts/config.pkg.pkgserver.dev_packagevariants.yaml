---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: packagevariants.config.pkg.pkgserver.dev
spec:
  group: config.pkg.pkgserver.dev
  names:
    categories:
    - pkg
    kind: PackageVariant
    listKind: PackageVariantList
    plural: packagevariants
    singular: packagevariant
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PackageVariant is the PackageVariant for the PackageVariant API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PackageVariantSpec defines the desired state of PackageVariant
            properties:
              adoptionPolicy:
                default: adoptNone
                enum:
                - adoptExisting
                - adoptNone
                type: string
              deletionPolicy:
                default: delete
                enum:
                - delete
                - orphan
                type: string
              downstream:
                description: Downstream defines the downstream Package information
                properties:
                  package:
                    description: Package defines the name of package in the repository.
                    type: string
                  realm:
                    description: Realm defines the scope in which the package is relevant
                    type: string
                  repository:
                    description: Repository defines the name of the Repository object
                      containing this package.
                    type: string
                  target:
                    description: |-
                      Target defines the target for the package; not relevant for catalog packages
                      e.g. a cluster
                    type: string
                type: object
              packageContext:
                description: PackageContext defines the context of the PackageVariant
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations is a key value map to be copied to the
                      PackageContext Annotations.
                    type: object
                  inputs:
                    description: Inputs define the inputs defined for the PackageContext
                    items:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                    x-kubernetes-preserve-unknown-fields: true
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels is a key value map to be copied to the PackageContext
                      Labels.
                    type: object
                  readinessGates:
                    description: |-
                      ReadinessGates define the conditions that need to be acted upon before considering the PackageRevision
                      ready for approval
                    items:
                      description: ReadinessGate allows for specifying conditions
                        for when a PackageRevision is considered ready.
                      properties:
                        conditionType:
                          description: ConditionType refers to the condition type
                            whose status is used to determine readiness.
                          type: string
                      required:
                      - conditionType
                      type: object
                    type: array
                type: object
              upstream:
                description: Upstream defines the upstream PackageRevision reference
                properties:
                  package:
                    description: Package defines the name of package in the repository.
                    type: string
                  realm:
                    description: Realm defines the scope in which the package is relevant
                    type: string
                  repository:
                    description: Repository defines the name of the Repository object
                      containing this package.
                    type: string
                  revision:
                    description: Revision defines the revision of the package once
                      published
                    type: string
                type: object
            type: object
          status:
            description: PackageVariantStatus defines the observed state of PackageVariant
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
